name: Run Selenium Tests

on:
  push:
    branches:
      - 1702879975  # Change this to your default branch if different
    paths:
      - 'seleniumExecution/src/main/java/App.java'

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Download Chrome Stable Version
        run: |
          curl -o chrome-linux64.zip https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/120.0.6099.71/linux64/chrome-linux64.zip
        shell: bash

      - name: Unzip Chrome
        run: |
          unzip chrome-linux64.zip -d chrome-linux64
          export CHROME_BIN=$(pwd)/chrome-linux64/chrome
          echo "export CHROME_BIN=$CHROME_BIN" >> $GITHUB_ENV
        shell: bash

      - name: Display Chrome Path
        run: |
          echo "Chrome binary path: $CHROME_BIN"
        shell: bash

      - name: Set up ChromeDriver
        run: |
          # WebDriverManager handles driver setup, so you can skip this step
        shell: bash

      - name: Set up Maven
        run: |
          if [ ! -e ~/.m2/repository ]; then
            start_time=$(date +%s)
            echo "Start Set up Maven: $(date)" >> execution_log.txt
            sudo apt-get install maven -y
            end_time=$(date +%s)
            execution_time=$((end_time - start_time))
            echo "End Set up Maven: $(date)" >> execution_log.txt
            echo "Execution time for Setup Maven: $execution_time seconds" >> execution_log.txt
          else
            echo "Maven is already installed (cached)."
          fi
        shell: bash

      - name: Build and run Selenium tests
        run: |
          cd seleniumExecution
          mkdir test-output
          FILE_NAME=reportName.properties

          getProperty() {
            prop_key=$1
            prop_value=$(cat ${FILE_NAME} | grep ${prop_key} | cut -d'=' -f2)
          }

          getProperty reportName
          cd test-output
          > ${prop_value}.txt
          cd ..
          mvn clean install
          mvn test -DsuiteXmlFile=testng.xml >> ./test-output/${prop_value}.txt
        shell: bash

      - name: list files
        if: always()
        run: |
          cd seleniumExecution
          echo "ls selenium output"
          ls
          echo
          echo "ls test-output"
          cd test-output
          ls
